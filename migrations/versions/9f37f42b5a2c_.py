"""empty message

Revision ID: 9f37f42b5a2c
Revises: 
Create Date: 2025-05-02 16:51:04.767879

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9f37f42b5a2c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('ip_address', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('employment_type', sa.Text(), nullable=False),
    sa.Column('description_tasks', sa.Text(), nullable=False),
    sa.Column('description_conditions', sa.Text(), nullable=False),
    sa.Column('ideal_profile', sa.Text(), nullable=False),
    sa.Column('questions_json', sa.JSON(), nullable=False),
    sa.Column('soft_questions_json', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vacancies_title'), ['title'], unique=False)

    op.create_table('candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('phone', sa.Text(), nullable=False),
    sa.Column('base_answers', sa.JSON(), nullable=False),
    sa.Column('vacancy_answers', sa.JSON(), nullable=False),
    sa.Column('soft_answers', sa.JSON(), nullable=False),
    sa.Column('resume_path', sa.Text(), nullable=True),
    sa.Column('resume_text', sa.Text(), nullable=True),
    sa.Column('ai_match_percent', sa.Integer(), nullable=True),
    sa.Column('ai_pros', sa.Text(), nullable=True),
    sa.Column('ai_cons', sa.Text(), nullable=True),
    sa.Column('ai_recommendation', sa.Text(), nullable=True),
    sa.Column('ai_score_location', sa.Integer(), nullable=True),
    sa.Column('ai_score_experience', sa.Integer(), nullable=True),
    sa.Column('ai_score_tech', sa.Integer(), nullable=True),
    sa.Column('ai_score_education', sa.Integer(), nullable=True),
    sa.Column('ai_score_comments_location', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_experience', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_tech', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_education', sa.Text(), nullable=True),
    sa.Column('ai_mismatch_notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('interview_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hr_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tracking_code', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tracking_code')
    )
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_candidates_email'), ['email'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('email_sent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_candidates_email'))

    op.drop_table('candidates')
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vacancies_title'))

    op.drop_table('vacancies')
    op.drop_table('system_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
