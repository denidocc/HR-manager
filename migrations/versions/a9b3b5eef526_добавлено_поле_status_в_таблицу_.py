"""Добавлено поле status в таблицу vacancies

Revision ID: a9b3b5eef526
Revises: 65d7f4d23f68
Create Date: 2025-05-06 13:24:58.023525

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9b3b5eef526'
down_revision = '65d7f4d23f68'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('industries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['industries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('industries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_industries_name'), ['name'], unique=False)

    op.create_table('skill_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('normalized_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('synonyms', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['skill_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skills_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_skills_normalized_name'), ['normalized_name'], unique=False)

    op.create_table('vacancy_industries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['industries.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancy_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('importance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('experience_months', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('extracted_from', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Вместо автоматически сгенерированных команд, используем SQL для добавления колонок с дефолтными значениями
    op.execute("ALTER TABLE vacancies ADD COLUMN status TEXT NOT NULL DEFAULT 'active'")
    op.execute("ALTER TABLE vacancies ADD COLUMN difficulty_level TEXT NOT NULL DEFAULT 'medium'")
    
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('target_time_to_fill', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('recruitment_budget', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.drop_column('closed_at')
        batch_op.drop_column('recruitment_budget')
        batch_op.drop_column('target_time_to_fill')
        batch_op.drop_column('difficulty_level')
        batch_op.drop_column('location')
        batch_op.drop_column('status')

    op.drop_table('candidate_skills')
    op.drop_table('vacancy_skills')
    op.drop_table('vacancy_industries')
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skills_normalized_name'))
        batch_op.drop_index(batch_op.f('ix_skills_name'))

    op.drop_table('skills')
    op.drop_table('skill_categories')
    with op.batch_alter_table('industries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_industries_name'))

    op.drop_table('industries')
    # ### end Alembic commands ###
