"""empty message

Revision ID: 0f6491a6b045
Revises: 8c236264d248
Create Date: 2025-05-12 17:41:09.893042

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0f6491a6b045'
down_revision = '8c236264d248'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('keyword_categories', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Text(),
               existing_nullable=False)
        batch_op.alter_column('code',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Text(),
               existing_nullable=False)

    # Сначала создаем временную колонку типа TEXT
    op.execute('ALTER TABLE keywords ADD COLUMN synonyms_json TEXT')
    
    # Копируем данные из массива в JSON строку
    op.execute("""
        UPDATE keywords 
        SET synonyms_json = CASE 
            WHEN synonyms IS NULL THEN '[]'::text
            ELSE array_to_json(synonyms)::text
        END
    """)
    
    # Удаляем старую колонку
    op.execute('ALTER TABLE keywords DROP COLUMN synonyms')
    
    # Создаем новую колонку типа JSON
    op.execute('ALTER TABLE keywords ADD COLUMN synonyms JSONB DEFAULT \'[]\'::jsonb')
    
    # Копируем данные из временной колонки
    op.execute("""
        UPDATE keywords 
        SET synonyms = synonyms_json::jsonb
    """)
    
    # Удаляем временную колонку
    op.execute('ALTER TABLE keywords DROP COLUMN synonyms_json')
    
    # Делаем колонку NOT NULL
    op.execute('ALTER TABLE keywords ALTER COLUMN synonyms SET NOT NULL')

    with op.batch_alter_table('keywords', schema=None) as batch_op:
        batch_op.alter_column('word_ru',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Text(),
               nullable=False)
        batch_op.alter_column('word_en',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('word_tm',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Text(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('keywords', schema=None) as batch_op:
        batch_op.alter_column('word_tm',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('word_en',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('word_ru',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=100),
               nullable=True)

    # Создаем временную колонку типа TEXT
    op.execute('ALTER TABLE keywords ADD COLUMN synonyms_array TEXT[]')
    
    # Копируем данные из JSON в массив
    op.execute("""
        UPDATE keywords 
        SET synonyms_array = CASE 
            WHEN synonyms IS NULL THEN ARRAY[]::text[]
            ELSE ARRAY(SELECT jsonb_array_elements_text(synonyms))
        END
    """)
    
    # Удаляем старую колонку
    op.execute('ALTER TABLE keywords DROP COLUMN synonyms')
    
    # Создаем новую колонку типа TEXT[]
    op.execute('ALTER TABLE keywords ADD COLUMN synonyms TEXT[] DEFAULT ARRAY[]::text[]')
    
    # Копируем данные из временной колонки
    op.execute("""
        UPDATE keywords 
        SET synonyms = synonyms_array
    """)
    
    # Удаляем временную колонку
    op.execute('ALTER TABLE keywords DROP COLUMN synonyms_array')

    with op.batch_alter_table('keyword_categories', schema=None) as batch_op:
        batch_op.alter_column('code',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
