"""empty message

Revision ID: 15e3bf271d49
Revises: 
Create Date: 2025-05-21 16:45:46.726605

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '15e3bf271d49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('c_education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('short_name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_employment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_gender',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('short_name', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_rejection_reason',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_selection_stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_user_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['industries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('industries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_industries_name'), ['name'], unique=False)

    op.create_table('keyword_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('skill_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('keywords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('word_ru', sa.Text(), nullable=False),
    sa.Column('word_en', sa.Text(), nullable=True),
    sa.Column('word_tm', sa.Text(), nullable=True),
    sa.Column('synonyms', sa.JSON(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['keyword_categories.id'], ),
    sa.ForeignKeyConstraint(['industry_id'], ['industries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('normalized_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('synonyms', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['skill_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skills_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_skills_normalized_name'), ['normalized_name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_email', sa.Text(), nullable=False),
    sa.Column('_phone', sa.Text(), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('company', sa.Text(), nullable=True),
    sa.Column('position', sa.Text(), nullable=True),
    sa.Column('id_c_gender', sa.Integer(), nullable=True),
    sa.Column('id_c_user_status', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('avatar_path', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_c_gender'], ['c_gender.id'], ),
    sa.ForeignKeyConstraint(['id_c_user_status'], ['c_user_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users__email'), ['_email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users__phone'), ['_phone'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id_c_gender'), ['id_c_gender'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_id_c_user_status'), ['id_c_user_status'], unique=False)

    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('ip_address', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_selection_stages',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['c_selection_stage.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'stage_id')
    )
    op.create_table('vacancies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('id_c_employment_type', sa.Integer(), nullable=False),
    sa.Column('description_tasks', sa.Text(), nullable=False),
    sa.Column('description_conditions', sa.Text(), nullable=False),
    sa.Column('ideal_profile', sa.Text(), nullable=False),
    sa.Column('questions_json', sa.JSON(), nullable=False),
    sa.Column('soft_questions_json', sa.JSON(), nullable=False),
    sa.Column('selection_stages_json', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.Text(), nullable=False),
    sa.Column('target_time_to_fill', sa.Integer(), nullable=True),
    sa.Column('recruitment_budget', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('company_values', sa.Text(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_generation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ai_generation_prompt', sa.Text(), nullable=True),
    sa.Column('ai_generation_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_c_employment_type'], ['c_employment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vacancies_id_c_employment_type'), ['id_c_employment_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_vacancies_title'), ['title'], unique=False)

    op.create_table('candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=False),
    sa.Column('_email', sa.Text(), nullable=False),
    sa.Column('_phone', sa.Text(), nullable=False),
    sa.Column('base_answers', sa.JSON(), nullable=False),
    sa.Column('vacancy_answers', sa.JSON(), nullable=False),
    sa.Column('soft_answers', sa.JSON(), nullable=False),
    sa.Column('resume_path', sa.Text(), nullable=True),
    sa.Column('resume_text', sa.Text(), nullable=True),
    sa.Column('structured_resume_data', sa.JSON(), nullable=True),
    sa.Column('cover_letter', sa.Text(), nullable=True),
    sa.Column('ai_match_percent', sa.Integer(), nullable=True),
    sa.Column('ai_pros', sa.Text(), nullable=True),
    sa.Column('ai_cons', sa.Text(), nullable=True),
    sa.Column('ai_recommendation', sa.Text(), nullable=True),
    sa.Column('ai_score_location', sa.Integer(), nullable=True),
    sa.Column('ai_score_experience', sa.Integer(), nullable=True),
    sa.Column('ai_score_tech', sa.Integer(), nullable=True),
    sa.Column('ai_score_education', sa.Integer(), nullable=True),
    sa.Column('ai_score_comments_location', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_experience', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_tech', sa.Text(), nullable=True),
    sa.Column('ai_score_comments_education', sa.Text(), nullable=True),
    sa.Column('ai_mismatch_notes', sa.Text(), nullable=True),
    sa.Column('ai_data_consistency', sa.JSON(), nullable=True),
    sa.Column('ai_answer_quality', sa.JSON(), nullable=True),
    sa.Column('ai_data_completeness', sa.JSON(), nullable=True),
    sa.Column('ai_analysis_data', sa.JSON(), nullable=True),
    sa.Column('id_c_selection_stage', sa.Integer(), nullable=False),
    sa.Column('id_c_rejection_reason', sa.Integer(), nullable=True),
    sa.Column('interview_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hr_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tracking_code', sa.Text(), nullable=False),
    sa.Column('gender', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_c_rejection_reason'], ['c_rejection_reason.id'], ),
    sa.ForeignKeyConstraint(['id_c_selection_stage'], ['c_selection_stage.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tracking_code')
    )
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_candidates__email'), ['_email'], unique=False)

    op.create_table('vacancy_industries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['industries.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancy_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('importance', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('experience_months', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('extracted_from', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('email_sent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    op.drop_table('candidate_skills')
    op.drop_table('vacancy_skills')
    op.drop_table('vacancy_industries')
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_candidates__email'))

    op.drop_table('candidates')
    with op.batch_alter_table('vacancies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vacancies_title'))
        batch_op.drop_index(batch_op.f('ix_vacancies_id_c_employment_type'))

    op.drop_table('vacancies')
    op.drop_table('user_selection_stages')
    op.drop_table('system_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id_c_user_status'))
        batch_op.drop_index(batch_op.f('ix_users_id_c_gender'))
        batch_op.drop_index(batch_op.f('ix_users__phone'))
        batch_op.drop_index(batch_op.f('ix_users__email'))

    op.drop_table('users')
    with op.batch_alter_table('skills', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skills_normalized_name'))
        batch_op.drop_index(batch_op.f('ix_skills_name'))

    op.drop_table('skills')
    op.drop_table('keywords')
    op.drop_table('skill_categories')
    op.drop_table('keyword_categories')
    with op.batch_alter_table('industries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_industries_name'))

    op.drop_table('industries')
    op.drop_table('c_user_status')
    op.drop_table('c_selection_stage')
    op.drop_table('c_rejection_reason')
    op.drop_table('c_gender')
    op.drop_table('c_employment_type')
    op.drop_table('c_education')
    # ### end Alembic commands ###
